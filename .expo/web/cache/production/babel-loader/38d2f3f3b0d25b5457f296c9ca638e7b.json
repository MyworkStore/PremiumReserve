{"ast":null,"code":"import _regeneratorRuntime from\"@babel/runtime/regenerator\";import uuidv4 from'uuid/v4';export default{get name(){return'ExpoDocumentPicker';},getDocumentAsync:function getDocumentAsync(_ref){var _ref$type,type,_ref$multiple,multiple,input;return _regeneratorRuntime.async(function getDocumentAsync$(_context){while(1){switch(_context.prev=_context.next){case 0:_ref$type=_ref.type,type=_ref$type===void 0?'*/*':_ref$type,_ref$multiple=_ref.multiple,multiple=_ref$multiple===void 0?false:_ref$multiple;input=document.createElement('input');input.style.display='none';input.setAttribute('type','file');input.setAttribute('accept',type);input.setAttribute('id',uuidv4());if(multiple){input.setAttribute('multiple','multiple');}document.body.appendChild(input);return _context.abrupt(\"return\",new Promise(function(resolve,reject){input.addEventListener('change',function(){if(input.files){var targetFile=input.files[0];var reader=new FileReader();reader.onerror=function(){reject(new Error(\"Failed to read the selected media because the operation failed.\"));};reader.onload=function(_ref2){var target=_ref2.target;var uri=target.result;resolve({type:'success',uri:uri,name:targetFile.name,file:targetFile,lastModified:targetFile.lastModified,size:targetFile.size,output:input.files});};reader.readAsDataURL(targetFile);}else{resolve({type:'cancel'});}document.body.removeChild(input);});var event=new MouseEvent('click');input.dispatchEvent(event);}));case 9:case\"end\":return _context.stop();}}});}};","map":{"version":3,"sources":["../src/ExpoDocumentPicker.web.ts"],"names":[],"mappings":"4DAAA,MAAO,CAAA,MAAP,KAAmB,SAAnB,CAIA,cAAe,CACb,GAAI,CAAA,IAAJ,EAAQ,CACN,MAAO,oBAAP,CACD,CAHY,CAKP,gBALO,0NAMX,IANW,CAMX,IANW,oBAMJ,KANI,8BAOX,QAPW,CAOX,QAPW,wBAOA,KAPA,eASL,KATK,CASG,QAAQ,CAAC,aAAT,CAAuB,OAAvB,CATH,CAUX,KAAK,CAAC,KAAN,CAAY,OAAZ,CAAsB,MAAtB,CACA,KAAK,CAAC,YAAN,CAAmB,MAAnB,CAA2B,MAA3B,EACA,KAAK,CAAC,YAAN,CAAmB,QAAnB,CAA6B,IAA7B,EACA,KAAK,CAAC,YAAN,CAAmB,IAAnB,CAAyB,MAAM,EAA/B,EACA,GAAI,QAAJ,CAAc,CACZ,KAAK,CAAC,YAAN,CAAmB,UAAnB,CAA+B,UAA/B,EACD,CAED,QAAQ,CAAC,IAAT,CAAc,WAAd,CAA0B,KAA1B,EAlBW,gCAoBJ,GAAI,CAAA,OAAJ,CAAY,SAAC,OAAD,CAAU,MAAV,CAAoB,CACrC,KAAK,CAAC,gBAAN,CAAuB,QAAvB,CAAiC,UAAK,CACpC,GAAI,KAAK,CAAC,KAAV,CAAiB,CACf,GAAM,CAAA,UAAU,CAAG,KAAK,CAAC,KAAN,CAAY,CAAZ,CAAnB,CACA,GAAM,CAAA,MAAM,CAAG,GAAI,CAAA,UAAJ,EAAf,CACA,MAAM,CAAC,OAAP,CAAiB,UAAK,CACpB,MAAM,CAAC,GAAI,CAAA,KAAJ,mEAAD,CAAN,CACD,CAFD,CAGA,MAAM,CAAC,MAAP,CAAgB,eAAe,IAAZ,CAAA,MAAY,OAAZ,MAAY,CAC7B,GAAM,CAAA,GAAG,CAAI,MAAc,CAAC,MAA5B,CACA,OAAO,CAAC,CACN,IAAI,CAAE,SADA,CAEN,GAAG,CAAH,GAFM,CAGN,IAAI,CAAE,UAAU,CAAC,IAHX,CAIN,IAAI,CAAE,UAJA,CAKN,YAAY,CAAE,UAAU,CAAC,YALnB,CAMN,IAAI,CAAE,UAAU,CAAC,IANX,CAON,MAAM,CAAE,KAAK,CAAC,KAPR,CAAD,CAAP,CASD,CAXD,CAaA,MAAM,CAAC,aAAP,CAAqB,UAArB,EACD,CApBD,IAoBO,CACL,OAAO,CAAC,CAAE,IAAI,CAAE,QAAR,CAAD,CAAP,CACD,CAED,QAAQ,CAAC,IAAT,CAAc,WAAd,CAA0B,KAA1B,EACD,CA1BD,EA4BA,GAAM,CAAA,KAAK,CAAG,GAAI,CAAA,UAAJ,CAAe,OAAf,CAAd,CACA,KAAK,CAAC,aAAN,CAAoB,KAApB,EACD,CA/BM,CApBI,iDAAf","sourcesContent":["import uuidv4 from 'uuid/v4';\n\nimport { DocumentResult, DocumentPickerOptions } from './types';\n\nexport default {\n  get name(): string {\n    return 'ExpoDocumentPicker';\n  },\n\n  async getDocumentAsync({\n    type = '*/*',\n    multiple = false,\n  }: DocumentPickerOptions): Promise<DocumentResult> {\n    const input = document.createElement('input');\n    input.style.display = 'none';\n    input.setAttribute('type', 'file');\n    input.setAttribute('accept', type);\n    input.setAttribute('id', uuidv4());\n    if (multiple) {\n      input.setAttribute('multiple', 'multiple');\n    }\n\n    document.body.appendChild(input);\n\n    return new Promise((resolve, reject) => {\n      input.addEventListener('change', () => {\n        if (input.files) {\n          const targetFile = input.files[0];\n          const reader = new FileReader();\n          reader.onerror = () => {\n            reject(new Error(`Failed to read the selected media because the operation failed.`));\n          };\n          reader.onload = ({ target }) => {\n            const uri = (target as any).result;\n            resolve({\n              type: 'success',\n              uri,\n              name: targetFile.name,\n              file: targetFile,\n              lastModified: targetFile.lastModified,\n              size: targetFile.size,\n              output: input.files,\n            });\n          };\n          // Read in the image file as a binary string.\n          reader.readAsDataURL(targetFile);\n        } else {\n          resolve({ type: 'cancel' });\n        }\n\n        document.body.removeChild(input);\n      });\n\n      const event = new MouseEvent('click');\n      input.dispatchEvent(event);\n    });\n  },\n};\n"],"sourceRoot":""},"metadata":{},"sourceType":"module"}