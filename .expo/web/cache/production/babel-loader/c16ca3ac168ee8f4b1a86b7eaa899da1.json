{"ast":null,"code":"import _regeneratorRuntime from\"@babel/runtime/regenerator\";import _classCallCheck from\"@babel/runtime/helpers/classCallCheck\";import _createClass from\"@babel/runtime/helpers/createClass\";import _possibleConstructorReturn from\"@babel/runtime/helpers/possibleConstructorReturn\";import _getPrototypeOf from\"@babel/runtime/helpers/getPrototypeOf\";import _inherits from\"@babel/runtime/helpers/inherits\";import React from'react';import View from\"react-native-web/dist/exports/View\";import StyleSheet from\"react-native-web/dist/exports/StyleSheet\";import TouchableOpacity from\"react-native-web/dist/exports/TouchableOpacity\";import TextInput from\"react-native-web/dist/exports/TextInput\";import Text from\"react-native-web/dist/exports/Text\";import Keyboard from\"react-native-web/dist/exports/Keyboard\";import ScrollView from\"react-native-web/dist/exports/ScrollView\";import ActivityIndicator from\"react-native-web/dist/exports/ActivityIndicator\";import Constants from'expo-constants';import FirebaseHelper from\"../helper/FireBaseHelper\";import{Notifications}from'expo';import*as Permissions from'expo-permissions';var PushNotificationScreen=function(_React$Component){_inherits(PushNotificationScreen,_React$Component);function PushNotificationScreen(props){var _this;_classCallCheck(this,PushNotificationScreen);_this=_possibleConstructorReturn(this,_getPrototypeOf(PushNotificationScreen).call(this,props));_this.getToken=function _callee(){var _ref,existingStatus,finalStatus,_ref2,status,token,param;return _regeneratorRuntime.async(function _callee$(_context){while(1){switch(_context.prev=_context.next){case 0:_this.setState({loadToken:true});_context.next=3;return _regeneratorRuntime.awrap(Permissions.getAsync(Permissions.NOTIFICATIONS));case 3:_ref=_context.sent;existingStatus=_ref.status;finalStatus=existingStatus;if(!(existingStatus!=='granted')){_context.next=12;break;}_context.next=9;return _regeneratorRuntime.awrap(Permissions.askAsync(Permissions.NOTIFICATIONS));case 9:_ref2=_context.sent;status=_ref2.status;finalStatus=status;case 12:if(!(finalStatus!=='granted')){_context.next=14;break;}return _context.abrupt(\"return\");case 14:_context.next=16;return _regeneratorRuntime.awrap(Notifications.getExpoPushTokenAsync());case 16:token=_context.sent;_this.setState({token:token});if(_this.state.token!=\"\"){_this.setState({loadToken:false});}param={token:_this.state.token};FirebaseHelper.update('/userNoti/hok',param);case 21:case\"end\":return _context.stop();}}});};_this.sendMessage=function(){Keyboard.dismiss();var response=fetch('https://exp.host/--/api/v2/push/send',{method:'POST',header:{Accept:'application/json','Content-Type':'application/json'},body:JSON.stringify({to:_this.state.token,sound:'default',title:'ทดสอบ Notification',body:_this.state.message})});console.log(\"========== Response ===========\");console.log(response);};_this.state={loadToken:false,token:\"\",message:\"\"};return _this;}_createClass(PushNotificationScreen,[{key:\"render\",value:function render(){var _this2=this;return React.createElement(View,{style:styles.container},React.createElement(ScrollView,{keyboardShouldPersistTaps:\"handled\"},React.createElement(View,null,React.createElement(TouchableOpacity,{style:{backgroundColor:'#33bbff',marginTop:10,height:50,alignItems:'center',justifyContent:'center'},onPress:this.getToken},React.createElement(Text,{style:{textAlign:'center'}},\"\\u0E01\\u0E14\\u0E40\\u0E1E\\u0E37\\u0E48\\u0E2D\\u0E23\\u0E31\\u0E1A token\")),this.state.loadToken==true?React.createElement(ActivityIndicator,{size:\"large\",color:\"#0000ff\"}):React.createElement(Text,{style:{textAlign:'center',marginTop:40}},this.state.token)),this.state.token==\"\"?React.createElement(View,null):React.createElement(View,{style:{marginTop:20}},React.createElement(TextInput,{style:{borderColor:'#000000',borderWidth:1,padding:10},placeholder:\"\\u0E43\\u0E2A\\u0E48\\u0E02\\u0E49\\u0E2D\\u0E04\\u0E27\\u0E32\\u0E21 Noti\",onChangeText:function onChangeText(text){_this2.setState({message:text});}}),React.createElement(TouchableOpacity,{style:{backgroundColor:'#00e600',marginTop:10,height:50,alignItems:'center',justifyContent:'center'},onPress:this.sendMessage},React.createElement(Text,{style:{textAlign:'center'}},\"\\u0E01\\u0E14\\u0E40\\u0E1E\\u0E37\\u0E48\\u0E2D\\u0E2A\\u0E48\\u0E07\\u0E02\\u0E49\\u0E2D\\u0E04\\u0E27\\u0E32\\u0E21\")))));}}]);return PushNotificationScreen;}(React.Component);export{PushNotificationScreen as default};PushNotificationScreen.navigationOptions={title:'ทดสอบ Push Notification',headerTitleStyle:{flex:1,textAlign:'center'}};var styles=StyleSheet.create({container:{flex:1,marginTop:Constants.statusBarHeight,paddingHorizontal:10,justifyContent:'center'}});","map":{"version":3,"sources":["D:/GitProject/PremiumReserve/screens/PushNotificationScreen.js"],"names":["React","Constants","FirebaseHelper","Notifications","Permissions","PushNotificationScreen","props","getToken","setState","loadToken","getAsync","NOTIFICATIONS","existingStatus","status","finalStatus","askAsync","getExpoPushTokenAsync","token","state","param","update","sendMessage","Keyboard","dismiss","response","fetch","method","header","Accept","body","JSON","stringify","to","sound","title","message","console","log","styles","container","backgroundColor","marginTop","height","alignItems","justifyContent","textAlign","borderColor","borderWidth","padding","text","Component","navigationOptions","headerTitleStyle","flex","StyleSheet","create","statusBarHeight","paddingHorizontal"],"mappings":"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","sourcesContent":["import React from 'react'\r\nimport {\r\n    View,\r\n    StyleSheet,\r\n    TouchableOpacity,\r\n    TextInput,\r\n    Text,\r\n    Keyboard,\r\n    ScrollView,\r\n    ActivityIndicator\r\n} from 'react-native'\r\n\r\nimport Constants from 'expo-constants';\r\nimport FirebaseHelper from '../helper/FireBaseHelper';\r\nimport { Notifications } from 'expo';\r\nimport * as Permissions from 'expo-permissions';\r\n\r\nexport default class PushNotificationScreen extends React.Component{\r\n\r\n    constructor (props) {\r\n        super(props);\r\n        this.state = {\r\n          loadToken: false,\r\n          token: \"\",\r\n          message: \"\",\r\n        };\r\n    \r\n      }\r\n\r\n    getToken = async() => {\r\n\r\n        this.setState({\r\n            loadToken: true\r\n        })\r\n\r\n        const { status: existingStatus } = await Permissions.getAsync(\r\n            Permissions.NOTIFICATIONS\r\n        );\r\n        let finalStatus = existingStatus;\r\n\r\n        if (existingStatus !== 'granted') {\r\n        const { status } = await Permissions.askAsync(Permissions.NOTIFICATIONS);\r\n        finalStatus = status;\r\n        }\r\n    \r\n        if (finalStatus !== 'granted') {\r\n        return;\r\n        }\r\n    \r\n        let token = await Notifications.getExpoPushTokenAsync();\r\n\r\n        this.setState({\r\n            token: token\r\n        })\r\n\r\n        if( this.state.token != \"\" ){\r\n            this.setState({\r\n                loadToken: false\r\n            })\r\n        }\r\n\r\n        const param = {\r\n            token: this.state.token\r\n        }\r\n\r\n        FirebaseHelper.update('/userNoti/hok', param)\r\n\r\n    }\r\n\r\n    sendMessage = () => {\r\n        Keyboard.dismiss()\r\n\r\n        let response = fetch('https://exp.host/--/api/v2/push/send', {\r\n            method: 'POST',\r\n            header: {\r\n                Accept: 'application/json',\r\n                'Content-Type': 'application/json'\r\n            },\r\n            body: JSON.stringify({\r\n                to: this.state.token,\r\n                sound: 'default',\r\n                title: 'ทดสอบ Notification',\r\n                body: this.state.message\r\n                \r\n            })\r\n        })\r\n\r\n        console.log(\"========== Response ===========\")\r\n        console.log(response)\r\n\r\n    }\r\n\r\n    render(){\r\n        return (\r\n            <View style={styles.container}>\r\n                <ScrollView keyboardShouldPersistTaps='handled'>\r\n                    <View>\r\n                        <TouchableOpacity style={{backgroundColor: '#33bbff', marginTop: 10, height: 50, alignItems: 'center', justifyContent: 'center'}}\r\n                            onPress={this.getToken}\r\n                        >\r\n                            <Text style={{textAlign: 'center'}}>\r\n                                กดเพื่อรับ token\r\n                            </Text>\r\n                        </TouchableOpacity>\r\n                        {\r\n                            this.state.loadToken == true  ? <ActivityIndicator size=\"large\" color=\"#0000ff\" /> :\r\n                            <Text style={{textAlign: 'center', marginTop: 40}}>\r\n                                {this.state.token}\r\n                            </Text>\r\n                        }\r\n                    </View>\r\n                    {\r\n                        this.state.token == \"\" ? <View></View> :\r\n                        <View style={{marginTop: 20}}>\r\n                            <TextInput \r\n                                style={{borderColor: '#000000', borderWidth: 1, padding: 10}} \r\n                                placeholder='ใส่ข้อความ Noti'\r\n                                onChangeText={(text)=>{this.setState({message: text})}}\r\n                            />\r\n                            <TouchableOpacity style={{backgroundColor: '#00e600', marginTop: 10, height: 50, alignItems: 'center', justifyContent: 'center'}}\r\n                                onPress={this.sendMessage}\r\n                            >\r\n                                <Text style={{textAlign: 'center'}}>\r\n                                    กดเพื่อส่งข้อความ\r\n                                </Text>\r\n                            </TouchableOpacity>\r\n                        </View>\r\n                    }\r\n                </ScrollView>\r\n            </View>\r\n        )\r\n    }\r\n\r\n}\r\n\r\nPushNotificationScreen.navigationOptions =  {\r\n    title: 'ทดสอบ Push Notification',\r\n    headerTitleStyle: { flex: 1, textAlign: 'center'}\r\n    // header: null,\r\n};\r\n\r\nconst styles = StyleSheet.create({\r\n    container: {\r\n        flex: 1,\r\n        marginTop: Constants.statusBarHeight,\r\n        paddingHorizontal: 10,\r\n        justifyContent: 'center',\r\n    }\r\n})"]},"metadata":{},"sourceType":"module"}